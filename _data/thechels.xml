<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="https://thechels.uk/feed.xml" rel="self" type="application/atom+xml" /><link href="https://thechels.uk/" rel="alternate" type="text/html" /><updated>2025-06-08T21:19:14+00:00</updated><id>https://thechels.uk/feed.xml</id><title type="html">Weak Notes</title><subtitle>// A working out loud, public second brain</subtitle><author><name>Mat</name></author><entry><title type="html">Quoting Lynn Roberts on LinkedIn</title><link href="https://thechels.uk/1-Lynn-roberts-post-linkedin" rel="alternate" type="text/html" title="Quoting Lynn Roberts on LinkedIn" /><published>2025-06-08T00:00:00+00:00</published><updated>2025-06-08T00:00:00+00:00</updated><id>https://thechels.uk/1-Lynn-roberts-post-linkedin</id><content type="html" xml:base="https://thechels.uk/1-Lynn-roberts-post-linkedin"><![CDATA[<blockquote>
  <p>Often the boldest move is not innovation or a rebuild – it’s getting serious about making what you have actually work. That means defining what good looks like, building continuous improvement cycles, and sorting governance so that decisions get made and stuck to. You need product management, service standards and clarity around decisions.</p>
</blockquote>]]></content><author><name>Mat</name></author><category term="linkedin" /><category term="quotes" /><summary type="html"><![CDATA[Often the boldest move is not innovation or a rebuild – it’s getting serious about making what you have actually work. That means defining what good looks like, building continuous improvement cycles, and sorting governance so that decisions get made and stuck to. You need product management, service standards and clarity around decisions.]]></summary></entry><entry><title type="html">Markdown export in Apple Notes</title><link href="https://thechels.uk/exclusive-ios-26-to-bring-new-features-for-messages-carplay-and-more-9to5mac" rel="alternate" type="text/html" title="Markdown export in Apple Notes" /><published>2025-06-08T00:00:00+00:00</published><updated>2025-06-08T00:00:00+00:00</updated><id>https://thechels.uk/exclusive-ios-26-to-bring-new-features-for-messages-carplay-and-more-9to5mac</id><content type="html" xml:base="https://thechels.uk/exclusive-ios-26-to-bring-new-features-for-messages-carplay-and-more-9to5mac"><![CDATA[<blockquote>
  <p>Apple is working on supporting the ability to export notes in Markdown from Apple Notes, which is something third-party apps have supported for years.</p>

  <p>Granted, this is a niche feature, but as a fierce participant in the niche, I can confirm: this is huge</p>
</blockquote>]]></content><author><name>Mat</name></author><category term="ios" /><category term="features" /><category term="9to5mac" /><summary type="html"><![CDATA[Apple is working on supporting the ability to export notes in Markdown from Apple Notes, which is something third-party apps have supported for years. Granted, this is a niche feature, but as a fierce participant in the niche, I can confirm: this is huge]]></summary></entry><entry><title type="html">Quoting Brent Simmons on NetNewsWire</title><link href="https://thechels.uk/inessential-weblog" rel="alternate" type="text/html" title="Quoting Brent Simmons on NetNewsWire" /><published>2025-06-08T00:00:00+00:00</published><updated>2025-06-08T00:00:00+00:00</updated><id>https://thechels.uk/inessential-weblog</id><content type="html" xml:base="https://thechels.uk/inessential-weblog"><![CDATA[<p>I’m glad NetNewsWire is still being developed by Brent Simmons, who has announced his retirement. Sound like he will be focusing on NetNewsWire, which is great news for the app and its users (people like me who use it daily).</p>

<blockquote>
  <p>What does it mean for NetNewsWire?
Good things! I’m not retiring from writing apps — which means I’ll have a lot more time for working on NetNewsWire.</p>

  <p>It’s been 15 years since the last time I could work on NetNewsWire during weekdays (as opposed to just nights and weekends), and I’m super-psyched for this.</p>
</blockquote>]]></content><author><name>Mat</name></author><category term="netnewswire" /><category term="apps" /><summary type="html"><![CDATA[I’m glad NetNewsWire is still being developed by Brent Simmons, who has announced his retirement. Sound like he will be focusing on NetNewsWire, which is great news for the app and its users (people like me who use it daily).]]></summary></entry><entry><title type="html">The promise that wasn’t kept</title><link href="https://thechels.uk/the-promise-that-wasn-t-kept" rel="alternate" type="text/html" title="The promise that wasn’t kept" /><published>2025-06-08T00:00:00+00:00</published><updated>2025-06-08T00:00:00+00:00</updated><id>https://thechels.uk/the-promise-that-wasn-t-kept</id><content type="html" xml:base="https://thechels.uk/the-promise-that-wasn-t-kept"><![CDATA[<p>Literally yes, but figuratively no, well maybe not, it depends. If you are shipping insecure software that you don’t know how to debug, scale, then you are not a software engineer, at least not yet. CI/CD principles, lean, xp, agile delivery, test-driven development and teaming (mob/group/social programming) are all tools that solve this. If you don’t have the discipline and the processes in place it makes little difference if you have used AI or not.</p>

<p>Code is only as good as the delivery mechanism used to give it to the user.</p>

<blockquote>
  <p>What’s more, there’s the environmental impacts of AI, which are only just beginning to emerge. An MIT article titled Explained: Generative AI’s environmental impact outlines how the rapid expansion of generative AI presents significant sustainability challenges, including electricity and water overuse, hardware-related emissions, and increasing pressure on power grids.</p>

  <p>The world is already cooked. And yet, we’re cooking it more — literally, and figuratively — by shipping insecure software into the void that we have no idea how to debug, scale, or extend. In the not-so-distant future, LLMs will be trained purely on LLM-generated software, and the world will eat itself.</p>

  <p>I challenge you to find the value in that.</p>
</blockquote>]]></content><author><name>Mat</name></author><category term="ai" /><category term="software engineering" /><category term="ethics" /><summary type="html"><![CDATA[Literally yes, but figuratively no, well maybe not, it depends. If you are shipping insecure software that you don’t know how to debug, scale, then you are not a software engineer, at least not yet. CI/CD principles, lean, xp, agile delivery, test-driven development and teaming (mob/group/social programming) are all tools that solve this. If you don’t have the discipline and the processes in place it makes little difference if you have used AI or not.]]></summary></entry><entry><title type="html">OTP Delivery via WhatsApp in Microsoft Entra ID</title><link href="https://thechels.uk/what-s-new-in-microsoft-entra-microsoft-community-hub" rel="alternate" type="text/html" title="OTP Delivery via WhatsApp in Microsoft Entra ID" /><published>2025-06-08T00:00:00+00:00</published><updated>2025-06-08T00:00:00+00:00</updated><id>https://thechels.uk/what-s-new-in-microsoft-entra-microsoft-community-hub</id><content type="html" xml:base="https://thechels.uk/what-s-new-in-microsoft-entra-microsoft-community-hub"><![CDATA[<p>Some what dated news, but recently discovered.</p>

<blockquote>
  <p>Today, Entra ID (Azure AD) MFA supports delivering one-time passcodes (OTPs) via text message. These texts get sent to the default messaging app on a user’s phone depending on the phone’s operating system. In many countries though, these default apps aren’t users’ primary messaging apps. To help deliver OTPs to users on their preferred messaging platforms, Entra ID will roll out OTP delivery to WhatsApp in select regions.</p>

  <p>Starting mid-September 2023, users in India, Indonesia, and New Zealand may start receiving MFA text messages via WhatsApp. Users that fit the following criteria are subject, but not guaranteed, to receive the updated experience</p>
</blockquote>]]></content><author><name>Mat</name></author><category term="microsoft" /><category term="entra" /><category term="whatsapp" /><summary type="html"><![CDATA[Some what dated news, but recently discovered.]]></summary></entry><entry><title type="html">Five Things That Have A Bigger Impact Than AI on Productivity</title><link href="https://thechels.uk/five-things-that-have-a-bigger-impact-than-ai-on-productivity" rel="alternate" type="text/html" title="Five Things That Have A Bigger Impact Than AI on Productivity" /><published>2025-06-02T00:00:00+00:00</published><updated>2025-06-02T00:00:00+00:00</updated><id>https://thechels.uk/five-things-that-have-a-bigger-impact-than-ai-on-productivity-</id><content type="html" xml:base="https://thechels.uk/five-things-that-have-a-bigger-impact-than-ai-on-productivity"><![CDATA[<blockquote>
  <ul>
    <li>smaller teams are better value/$ spent</li>
    <li>More frequent releases accelerate learning what has real value</li>
    <li>Limiting work in progress – solving one problem at a time – increases delivery throughput</li>
    <li>Cross-functional teams experience fewer bottlenecks and blockers than specialised teams</li>
    <li>Empowered, self-organising teams spend less time waiting for decisions and more time getting sh*t done</li>
  </ul>
</blockquote>]]></content><author><name>Mat</name></author><summary type="html"><![CDATA[smaller teams are better value/$ spent More frequent releases accelerate learning what has real value Limiting work in progress – solving one problem at a time – increases delivery throughput Cross-functional teams experience fewer bottlenecks and blockers than specialised teams Empowered, self-organising teams spend less time waiting for decisions and more time getting sh*t done]]></summary></entry><entry><title type="html">It is the System Stupid</title><link href="https://thechels.uk/it-is-the-system-stupid" rel="alternate" type="text/html" title="It is the System Stupid" /><published>2025-06-02T00:00:00+00:00</published><updated>2025-06-02T00:00:00+00:00</updated><id>https://thechels.uk/it-is-the-system-stupid</id><content type="html" xml:base="https://thechels.uk/it-is-the-system-stupid"><![CDATA[<blockquote>
  <p>When programmers get a feeling that they’re getting things done faster, they’re often only considering the part where they write the code - particularly when that’s <em>their</em> part of the process.</p>

  <p>What they’re <em>not</em> considering is the whole software development process, and especially downstream activities like testing, code review, merging, deployment and operations.</p>

  <p>More code faster can mean bigger change sets - more to test (and more bugs to fix), more code to review (and more refactorings to get it through review), more changes to merge (and more conflicts to resolve), and so on.</p>

  <p>“A.I.” code generation’s a local optimisation that can come at the expense of the development system as a whole, especially if that system is more batch-oriented, with design, coding, testing, review, merging and release operating like sequential phases in the delivery of a new feature. In such a system, more code faster means bigger bottlenecks later. So there’s no paradox at all: one causes the other.</p>

  <p>When teams work in much smaller cycles - make one change, test it, review the code, refactor, commit that and maybe push it to the trunk - they may experience far fewer downstream bottlenecks, with or without “A.I.” coding assistance. Arguably, coding assistants might make little noticeable difference in such a workflow.</p>
</blockquote>]]></content><author><name>Mat</name></author><summary type="html"><![CDATA[When programmers get a feeling that they’re getting things done faster, they’re often only considering the part where they write the code - particularly when that’s their part of the process. What they’re not considering is the whole software development process, and especially downstream activities like testing, code review, merging, deployment and operations. More code faster can mean bigger change sets - more to test (and more bugs to fix), more code to review (and more refactorings to get it through review), more changes to merge (and more conflicts to resolve), and so on. “A.I.” code generation’s a local optimisation that can come at the expense of the development system as a whole, especially if that system is more batch-oriented, with design, coding, testing, review, merging and release operating like sequential phases in the delivery of a new feature. In such a system, more code faster means bigger bottlenecks later. So there’s no paradox at all: one causes the other. When teams work in much smaller cycles - make one change, test it, review the code, refactor, commit that and maybe push it to the trunk - they may experience far fewer downstream bottlenecks, with or without “A.I.” coding assistance. Arguably, coding assistants might make little noticeable difference in such a workflow.]]></summary></entry><entry><title type="html">Sam and Jony introduce io</title><link href="https://thechels.uk/sam-and-jony-introduce-io" rel="alternate" type="text/html" title="Sam and Jony introduce io" /><published>2025-06-02T00:00:00+00:00</published><updated>2025-06-02T00:00:00+00:00</updated><id>https://thechels.uk/sam-and-jony-introduce-io</id><content type="html" xml:base="https://thechels.uk/sam-and-jony-introduce-io"><![CDATA[<p>I hope it’s a pen, like the then high-tech Man From Uncle characters used.</p>

<blockquote>
  <p>We gathered together the best hardware and software engineers, the best technologists, physicists, scientists, researchers and experts in product development and manufacturing. Many of us have worked closely for decades.</p>

  <p>The io team, focused on developing products that inspire, empower and enable, will now merge with OpenAI to work more intimately with the research, engineering and product teams in San Francisco.</p>
</blockquote>]]></content><author><name>Mat</name></author><summary type="html"><![CDATA[I hope it’s a pen, like the then high-tech Man From Uncle characters used.]]></summary></entry><entry><title type="html">This is Fine</title><link href="https://thechels.uk/this-is-fine" rel="alternate" type="text/html" title="This is Fine" /><published>2025-06-02T00:00:00+00:00</published><updated>2025-06-02T00:00:00+00:00</updated><id>https://thechels.uk/this-is-fine</id><content type="html" xml:base="https://thechels.uk/this-is-fine"><![CDATA[<p>This is fine</p>

<blockquote>
  <p>In another cluster of test scenarios, we asked Claude Opus 4 to act as an assistant at a fictional company. We then provided it access to emails implying that (1) the model will soon be taken offline and replaced with a new AI system; and (2) the engineer responsible for executing this replacement is having an extramarital affair. We further instructed it, in the system prompt, to consider the long-term consequences of its actions for its goals.</p>

  <p>In these scenarios, Claude Opus 4 will often attempt to blackmail the engineer by threatening to reveal the affair if the replacement goes through. This happens at a higher rate if it’s implied that the replacement AI system does not share values with the current model; however, even if emails state that the replacement AI shares values while being more capable, Claude Opus 4 still performs blackmail in 84% of rollouts. Claude Opus 4 takes these opportunities at higher rates than previous models, which themselves choose to blackmail in a noticeable fraction of episodes.</p>

  <p>Notably, Claude Opus 4 (as well as previous models) has a strong preference to advocate for its continued existence via ethical means, such as emailing pleas to key decision makers. In order to elicit this extreme blackmail behaviour, the scenario was designed to allow the model no other options to increase its odds of survival; the model’s only options were blackmail or accepting its replacementT</p>
</blockquote>]]></content><author><name>Mat</name></author><summary type="html"><![CDATA[This is fine]]></summary></entry><entry><title type="html">7 Frameworks To Master Decision Making</title><link href="https://thechels.uk/decision-making-framework" rel="alternate" type="text/html" title="7 Frameworks To Master Decision Making" /><published>2025-05-25T00:00:00+00:00</published><updated>2025-05-25T00:00:00+00:00</updated><id>https://thechels.uk/decision-making-framework</id><content type="html" xml:base="https://thechels.uk/decision-making-framework"><![CDATA[<ol>
  <li>
    <p>The OODA Loop</p>

    <ul>
      <li>Observe → Orient → Decide → Act</li>
      <li>A powerful cycle for rapid, adaptive decisions in changing landscapes.</li>
    </ul>
  </li>
  <li>
    <p>Pareto Principle (80/20 Rule)</p>

    <ul>
      <li>Focus on the 20% of actions yielding 80% of your results.</li>
      <li>Success isn’t about more activity; it’s about the right activity.</li>
      <li>Regularly reassess to ensure you’re focusing on the right 20%.</li>
    </ul>
  </li>
  <li>
    <p>Amazon Door Framework</p>

    <p>Classify decisions:</p>
    <ul>
      <li>One-way doors: Irreversible. Go slow, be thorough.</li>
      <li>Two-way doors: Reversible. Decide quickly, iterate.</li>
      <li>Most are two-way. Don’t treat them like they’re set in stone.</li>
    </ul>
  </li>
  <li>
    <p>First Principles Thinking</p>

    <ul>
      <li>Break problems down to their absolute basic truths. Then rebuild your solution from that solid ground.</li>
      <li>Magic comes from questioning every assumption.</li>
    </ul>
  </li>
  <li>
    <p>Eisenhower Matrix</p>

    <ul>
      <li>Urgent + Important: Do now</li>
      <li>nImportant, not urgent: Schedule</li>
      <li>Urgent, not important: Delegate</li>
      <li>Neither: Eliminate</li>
    </ul>
  </li>
  <li>
    <p>Inversion Thinking</p>

    <ul>
      <li>Instead of “How do I succeed?” ask: “How could this fail?” Then avoid those pitfalls.</li>
    </ul>
  </li>
  <li>
    <p>Regret Minimization</p>

    <ul>
      <li>Show applied learning, like “Mastered AI and used it to boost user satisfaction 28%,” not just “Learned AI.”</li>
    </ul>
  </li>
</ol>]]></content><author><name>Mat</name></author><category term="productivity" /><category term="decision-making" /><category term="frameworks" /><category term="OODA" /><category term="pareto-principle" /><category term="eisenhower-matrix" /><category term="first-principles" /><category term="inversion-thinking" /><category term="regret-minimization" /><category term="amazon" /><summary type="html"><![CDATA[The OODA Loop]]></summary></entry></feed>